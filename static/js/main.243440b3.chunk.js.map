{"version":3,"sources":["Options.js","BookmarBtn.js","App.js","reportWebVitals.js","index.js"],"names":["Options","props","useState","open","setOpen","default_to","setDefault_to","className","Button","variant","onClick","Collapse","in","htmlFor","type","value","onChange","event","target","setSettings","id","BookmarkBtn","text","linkJS","setLinkJS","settings","useEffect","fetch","then","response","replace","href","minify","compress","dead_code","drop_console","drop_debugger","keep_classnames","keep_fargs","keep_fnames","keep_infinity","mangle","eval","toplevel","safari10","module","sourceMap","output","comments","code","rows","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAgDeA,MA5Cf,SAAiBC,GACf,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAQA,OACE,sBAAKC,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,QAAS,kBAAMN,GAASD,IACxB,gBAAc,wBACd,gBAAeA,EAJjB,qBAQA,cAACQ,EAAA,EAAD,CAAUC,GAAIT,EAAd,SACE,+BACE,sBAAKI,UAAU,OAAf,UACE,uBAAOM,QAAQ,aAAaN,UAAU,aAAtC,yBAGA,uBACEO,KAAK,QACLC,MAAOV,EACPW,SAzBc,SAACC,GACzBX,EAAcW,EAAMC,OAAOH,OAE3Bd,EAAMkB,YAAY,CAAEd,WAAYY,EAAMC,OAAOH,SAuBnCR,UAAU,eACVa,GAAG,aACH,mBAAiB,oBAEnB,qBAAKA,GAAG,kBAAkBb,UAAU,YAApC,2EC4CGc,MA7Ef,WACE,IAaoBC,EAbpB,EAA4BpB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeC,EAAf,KACA,EAAgCtB,mBAAS,IAAzC,mBAAOuB,EAAP,KAAiBN,EAAjB,KA+CA,OAJAO,qBAAU,WAxCRC,MAAM,eACHC,MAAK,SAACC,GAAD,OAAcA,EAASP,UAC5BM,MAAK,SAACN,GACLA,EAAOA,EAAKQ,QAAQ,iBAAkBL,EAASpB,YAE/CmB,EAAUF,SAwCd,qCACE,qBAAKf,UAAU,mBAAf,SACE,mBACEwB,KAAM,eAvCMT,EAuCqBC,EAbtBS,iBAAOV,EAzBT,CACbW,SAAU,CACRC,WAAW,EACXC,cAAc,EACdC,eAAe,EACfC,iBAAiB,EACjBC,YAAY,EACZC,aAAa,EACbC,eAAe,GAEjBC,OAAQ,CACNC,MAAM,EACNL,iBAAiB,EACjBE,aAAa,EACbI,UAAU,EACVC,UAAU,GAEZC,QAAQ,EACRC,WAAW,EACXC,OAAQ,CACNC,UAAU,KAKwBC,MAchC1C,UAAU,yBAFZ,0BAQF,cAAC,EAAD,CAASY,YAAaA,IAEtB,0BACE+B,KAAK,IACL3C,UAAU,oBACVQ,MAAOoC,KAAKC,UAAU3B,KAGxB,0BACEyB,KAAK,KACL3C,UAAU,oBACVQ,MAAOQ,QCzDA8B,MAff,WACE,OACE,sBAAK9C,UAAU,YAAf,UACE,oBAAIA,UAAU,wBAAd,wBAEA,qBAAKA,UAAU,mBAAf,SACE,gFAEF,cAAC,EAAD,IAEA,qBAAKA,UAAU,YCFN+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.243440b3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Options(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [default_to, setDefault_to] = useState('');\r\n\r\n  const default_to_change = (event) => {\r\n    setDefault_to(event.target.value);\r\n\r\n    props.setSettings({ default_to: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"m-5\">\r\n      <Button\r\n        variant=\"link\"\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        options\r\n      </Button>\r\n      <Collapse in={open}>\r\n        <form>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"default_to\" className=\"form-label\">\r\n              Default To:\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={default_to}\r\n              onChange={default_to_change}\r\n              className=\"form-control\"\r\n              id=\"default_to\"\r\n              aria-describedby=\"default_to_help\"\r\n            />\r\n            <div id=\"default_to_help\" className=\"form-text\">\r\n              Would you like a default email address to send to?\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Options;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { minify } from 'terser';\r\nimport Options from './Options.js';\r\n\r\nfunction BookmarkBtn() {\r\n  const [linkJS, setLinkJS] = useState('');\r\n  const [settings, setSettings] = useState({});\r\n\r\n  const getJSLink = () => {\r\n    fetch('bookmark.js')\r\n      .then((response) => response.text())\r\n      .then((text) => {\r\n        text = text.replace('{{default_to}}', settings.default_to);\r\n\r\n        setLinkJS(text);\r\n      });\r\n  };\r\n\r\n  const minifyLink = (text) => {\r\n    const config = {\r\n      compress: {\r\n        dead_code: true,\r\n        drop_console: true,\r\n        drop_debugger: true,\r\n        keep_classnames: false,\r\n        keep_fargs: false,\r\n        keep_fnames: false,\r\n        keep_infinity: false,\r\n      },\r\n      mangle: {\r\n        eval: false,\r\n        keep_classnames: false,\r\n        keep_fnames: false,\r\n        toplevel: false,\r\n        safari10: false,\r\n      },\r\n      module: false,\r\n      sourceMap: false,\r\n      output: {\r\n        comments: false,\r\n      },\r\n    };\r\n\r\n    // Minify the code with Terser\r\n    const minified = minify(text, config).code;\r\n\r\n    return minified;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJSLink();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center mt-5\">\r\n        <a\r\n          href={'javascript:' + minifyLink(linkJS)}\r\n          className=\"btn btn-primary btn-lg\"\r\n        >\r\n          Hasty.Link\r\n        </a>\r\n      </div>\r\n\r\n      <Options setSettings={setSettings} />\r\n\r\n      <textarea\r\n        rows=\"4\"\r\n        className=\"form-control mt-5\"\r\n        value={JSON.stringify(settings)}\r\n      ></textarea>\r\n\r\n      <textarea\r\n        rows=\"20\"\r\n        className=\"form-control mt-5\"\r\n        value={linkJS}\r\n      ></textarea>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BookmarkBtn;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport BookmarkBtn from './BookmarBtn';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"display-1 text-center\">Hasty Link</h1>\r\n\r\n      <div className=\"text-center mt-5\">\r\n        <p>Drag the blue button onto your bookmarks bar.</p>\r\n      </div>\r\n      <BookmarkBtn />\r\n\r\n      <div className=\"App\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}